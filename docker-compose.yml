version: '3.8'

services:
  # MySQL Datenbank
  mysql:
    image: mysql:8.0
    container_name: cloud-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # Node.js Backend
  backend:
    build: ./backend
    container_name: cloud-backend
    restart: unless-stopped
    environment:
      DB_HOST: mysql
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      STORAGE_PATH: /storage
    volumes:
      - /mnt/storagebox:/storage:ro
    depends_on:
      - mysql
    networks:
      - app-network

  # Frontend mit nginx
  frontend:
    build: ./frontend
    container_name: cloud-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - app-network

  # Nginx Reverse Proxy
  nginx-proxy:
    image: nginx:alpine
    container_name: cloud-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge